"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"","","test_modern_endpoint_with_multiple_related_endpoints","tests.integration.relations","","unknown","","","test_relations","",""
"Test that async replication fails back correctly.","0","test_async_replication_failover_in_secondary_cluster","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"","","test_database_is_up[1]","tests.integration","","unknown","","","test_charm","",""
"","","test_kill_db_process[postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","","test_settings_are_correct[0]","tests.integration","","unknown","","","test_charm","",""
"","","test_kill_db_process[/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"A forceful restart with deleted data and without transaction logs (forced clone).","","test_forceful_restart_without_data_and_transaction_logs","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Deploy both charms (application and database) to use in the tests.","","test_deploy_charms","tests.integration.relations","","unknown","","","test_relations","",""
"","","test_extensions_blocking","tests.integration","","unknown","","","test_db","",""
"Test async replication between two PostgreSQL clusters.","0","test_async_replication","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"Test that there is read-only endpoint in a scaled up cluster.","0","test_read_only_endpoint_in_scaled_up_cluster","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Kill primary unit, check reelection.","","test_reelection","tests.integration.ha_tests","","unknown","","","test_replication","",""
"Build and deploy three unit of PostgreSQL.","","test_build_and_deploy","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","","test_freeze_db_process[/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Test that the relation can be broken and re-established.","0","test_reestablish_relation","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"Test that user can't connect with empty password.","","test_db_connection_with_empty_password","tests.integration","","unknown","","","test_password_rotation","",""
"Build and deploy one unit of PostgreSQL and then test config with wrong parameters.","486749","test_config_parameters","tests.integration","Thu Aug 08 06:09:35 UTC 2024","passed","Thu Aug 08 06:17:42 UTC 2024","","test_config","",""
"Remove unit with force while storage is alive.","","test_app_force_removal","tests.integration.ha_tests","","unknown","","","test_smoke","",""
"","","test_restart_db_process[/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","","test_database_is_up[2]","tests.integration","","unknown","","","test_charm","",""
"Checking if password is same as returned by CLI.

    I.e. we're manipulating the secret we think we're manipulating.
    ","","test_password_from_secret_same_as_cli","tests.integration","","unknown","","","test_password_rotation","",""
"Build the charm and deploy it.","19808","test_deploy_active","tests.integration","Thu Aug 08 07:07:19 UTC 2024","passed","Thu Aug 08 07:07:39 UTC 2024","","test_tls","",""
"Test that the charm can handle invalid and valid backup configurations.","","test_invalid_config_and_recovery_after_fixing_it","tests.integration","","unknown","","","test_backups","",""
"Verifies that database units with attached storage correctly repurpose storage.

    It is not enough to verify that Juju attaches the storage. Hence test checks that the
    postgresql properly uses the storage that was provided. (ie. doesn't just re-sync everything
    from primary, but instead computes a diff between current storage and primary storage.)
    ","","test_storage_re_use","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Simple test to ensure that the PostgreSQL and application charms get deployed.","0","test_deploy_stable","tests.integration.ha_tests","Thu Aug 08 05:36:33 UTC 2024","skipped","Thu Aug 08 05:36:33 UTC 2024","","test_upgrade_from_stable","",""
"","","test_exporter_is_up[2]","tests.integration","","unknown","","","test_charm","",""
"","","test_settings_are_correct[1]","tests.integration","","unknown","","","test_charm","",""
"Test password rotation action.","","test_password_rotation","tests.integration","","unknown","","","test_password_rotation","",""
"Test that the pre-upgrade-check action runs successfully.","0","test_pre_upgrade_check","tests.integration.ha_tests","Thu Aug 08 05:36:33 UTC 2024","skipped","Thu Aug 08 05:36:33 UTC 2024","","test_upgrade_from_stable","",""
"","","test_sentry_db_blocked","tests.integration","","unknown","","","test_db","",""
"Test that check relation data.","1570833","test_relations","tests.integration.new_relations","Thu Aug 08 05:40:58 UTC 2024","passed","Thu Aug 08 06:07:09 UTC 2024","","test_relations_coherence","",""
"","","test_restart_db_process[postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Build and deploy two units of PostgreSQL in GCP, test backup and restore actions.","","test_backup_gcp","tests.integration","","unknown","","","test_backups","",""
"Test that two different application connect to the database with different credentials.","0","test_two_applications_doesnt_share_the_same_relation_data","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"","0","test_invalid_extra_user_roles","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Test that async replication works when scaling the clusters.","0","test_scaling","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    ","","test_full_cluster_restart[SIGKILL-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Recreates the cluster from storage volumes.","0","test_cluster_restore","tests.integration.ha_tests","Thu Aug 08 05:18:26 UTC 2024","skipped","Thu Aug 08 05:18:26 UTC 2024","","test_restore_cluster","",""
"Deploy Landscape Scalable Bundle to test the 'db-admin' relation.","","test_landscape_scalable_bundle_db","tests.integration","","unknown","","","test_db_admin","",""
"Build and deploy two PostgreSQL cluster in two separate models to test async replication.","402576","test_deploy_async_replication_setup","tests.integration.ha_tests","Thu Aug 08 05:34:24 UTC 2024","broken","Thu Aug 08 05:41:07 UTC 2024","","test_async_replication","",""
"Test that relation data, like connection data, is updated correctly when scaling.","0","test_relation_data_is_updated_correctly_when_scaling","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Test that async replication fails over correctly.","0","test_async_replication_failover_in_main_cluster","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"","0","test_scale_up","tests.integration","Thu Aug 08 07:40:42 UTC 2024","skipped","Thu Aug 08 07:40:42 UTC 2024","","test_subordinates","",""
"","","test_settings_are_correct[2]","tests.integration","","unknown","","","test_charm","",""
"","","test_exporter_is_up[0]","tests.integration","","unknown","","","test_charm","",""
"This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    ","","test_full_cluster_restart[SIGTERM-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","0","test_upgrade_from_edge","tests.integration.ha_tests","Thu Aug 08 05:41:11 UTC 2024","skipped","Thu Aug 08 05:41:11 UTC 2024","","test_upgrade","",""
"","0","test_get_data_integrator_credentials","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"Deploy the charm-under-test.

    Assert on the unit status before any relations/configurations take place.
    ","","test_deploy","tests.integration","","unknown","","","test_charm","",""
"Simple test to ensure that the PostgreSQL and application charms get deployed.","329151","test_deploy_latest","tests.integration.ha_tests","Thu Aug 08 05:35:42 UTC 2024","broken","Thu Aug 08 05:41:11 UTC 2024","","test_upgrade","",""
"","0","test_data_integrator_creds_keep_on_working","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"","","test_freeze_db_process[postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Deploy both charms (application and database) to use in the tests.","290459","test_deploy_charms","tests.integration.new_relations","Thu Aug 08 05:42:50 UTC 2024","broken","Thu Aug 08 05:47:41 UTC 2024","","test_new_relations","",""
"Test that an application can connect to different clusters of the same database.","0","test_an_application_can_connect_to_multiple_aliased_database_clusters","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"","","test_legacy_endpoint_with_multiple_related_endpoints","tests.integration.relations","","unknown","","","test_relations","",""
"Build the charm and deploy it.","","test_deploy_active","tests.integration","","unknown","","","test_password_rotation","",""
"Test switching over to the second cluster.","0","test_switchover","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"","0","test_restart_machine","tests.integration","Thu Aug 08 07:42:17 UTC 2024","skipped","Thu Aug 08 07:42:17 UTC 2024","","test_tls","",""
"Test that there is no read-only endpoint in a standalone cluster.","0","test_no_read_only_endpoint_in_standalone_cluster","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Build and deploy one unit of PostgreSQL and then test the available plugins.","","test_plugins","tests.integration","","unknown","","","test_plugins","",""
"Test basic functionality of database relation interface.","0","test_database_relation_with_charm_libraries","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Test that a relation with no database name doesn't block the charm.","0","test_relation_with_no_database_name","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Test superuser actions and the request for more permissions.","0","test_user_with_extra_roles","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Check that writes in one cluster are not replicated to another cluster.","","test_no_data_replicated_between_clusters","tests.integration.ha_tests","","unknown","","","test_replication","",""
"Test that TLS is enabled when relating to the TLS Certificates Operator.","2077485","test_tls_enabled","tests.integration","Thu Aug 08 07:07:39 UTC 2024","broken","Thu Aug 08 07:42:16 UTC 2024","","test_tls","",""
"","","test_exporter_is_up[1]","tests.integration","","unknown","","","test_charm","",""
"Test promoting the standby cluster.","0","test_promote_standby","tests.integration.ha_tests","Thu Aug 08 05:41:09 UTC 2024","skipped","Thu Aug 08 05:41:09 UTC 2024","","test_async_replication","",""
"Write to primary, read data from secondaries (check consistency).","","test_consistency","tests.integration.ha_tests","","unknown","","","test_replication","",""
"","0","test_nextcloud_db_blocked","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"","","test_roles_blocking","tests.integration","","unknown","","","test_db","",""
"Test updating from stable channel.","0","test_upgrade_from_stable","tests.integration.ha_tests","Thu Aug 08 05:36:33 UTC 2024","skipped","Thu Aug 08 05:36:33 UTC 2024","","test_upgrade_from_stable","",""
"Test that is possible to restore a backup to another PostgreSQL cluster.","","test_restore_on_new_cluster","tests.integration","","unknown","","","test_backups","",""
"Test that in general, there is no change when password validation fails.","","test_no_password_change_on_invalid_password","tests.integration","","unknown","","","test_password_rotation","",""
"Test charm deploy in dirty environment with garbage storage.","","test_charm_garbage_ignorance","tests.integration.ha_tests","","unknown","","","test_smoke","",""
"","","test_canonical_livepatch_onprem_bundle_db","tests.integration","","unknown","","","test_db","",""
"Test that passwords don't get exposed on postgresql logs.","","test_no_password_exposed_on_logs","tests.integration","","unknown","","","test_password_rotation","",""
"Deploy Mailman3 Core to test the 'db' relation.","","test_mailman3_core_db","tests.integration","","unknown","","","test_db","",""
"Test that an application can connect to different clusters of the same database.","0","test_an_application_can_connect_to_multiple_database_clusters","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Build and deploy two PostgreSQL clusters.","1050869","test_build_and_deploy","tests.integration.ha_tests","Thu Aug 08 05:00:55 UTC 2024","broken","Thu Aug 08 05:18:26 UTC 2024","","test_restore_cluster","",""
"","0","test_scale_down","tests.integration","Thu Aug 08 07:40:42 UTC 2024","skipped","Thu Aug 08 07:40:42 UTC 2024","","test_subordinates","",""
"Test application deploy in dirty environment with garbage storage from another application.","","test_app_resources_conflicts_v3","tests.integration.ha_tests","","unknown","","","test_smoke","",""
"Completely cut and restore network (situation when the unit IP doesn't change).","","test_network_cut_without_ip_change","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Test data persists through a primary deletion.","","test_persist_data_through_primary_deletion","tests.integration","","unknown","","","test_charm","",""
"Test that relation data, like connection data, is updated correctly when scaling.","","test_relation_data_is_updated_correctly_when_scaling","tests.integration","","unknown","","","test_db","",""
"Test that an application can request additional databases using the same interface.","0","test_an_application_can_request_multiple_databases","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    ","","test_full_cluster_restart[SIGTERM-postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","2022421","test_deploy","tests.integration","Thu Aug 08 07:06:59 UTC 2024","broken","Thu Aug 08 07:40:42 UTC 2024","","test_subordinates","",""
"Test application deploy in dirty environment with garbage storage from another application.","","test_app_resources_conflicts_v2","tests.integration.ha_tests","","unknown","","","test_smoke","",""
"Build and deploy three unit of PostgreSQL.","","test_build_and_deploy","tests.integration.ha_tests","","unknown","","","test_replication","",""
"This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    ","","test_full_cluster_restart[SIGKILL-postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Test that the password can't be set to an empty string.","","test_empty_password","tests.integration","","unknown","","","test_password_rotation","",""
"Completely cut and restore network.","","test_network_cut","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Build and deploy two units of PostgreSQL in AWS, test backup and restore actions.","","test_backup_aws","tests.integration","","unknown","","","test_backups","",""
"Test that the admin role gives access to all the databases.","0","test_admin_role","tests.integration.new_relations","Thu Aug 08 05:47:42 UTC 2024","skipped","Thu Aug 08 05:47:42 UTC 2024","","test_new_relations","",""
"Build, deploy two units of PostgreSQL and do backup. Then, write new data into DB, switch WAL file and test point-in-time-recovery restore action.","","test_pitr_backup","tests.integration","","unknown","","","test_backups_pitr","",""
"Test that's possible to change PostgreSQL parameters.","","test_postgresql_parameters_change","tests.integration","","unknown","","","test_charm","",""
"","","test_database_is_up[0]","tests.integration","","unknown","","","test_charm","",""
"","0","test_fail_and_rollback","tests.integration.ha_tests","Thu Aug 08 05:41:11 UTC 2024","skipped","Thu Aug 08 05:41:11 UTC 2024","","test_upgrade","",""
"Test data is replicated to new units after a scale up.","","test_scale_down_and_up","tests.integration","","unknown","","","test_charm","",""
"Test that the pre-upgrade-check action runs successfully.","0","test_pre_upgrade_check","tests.integration.ha_tests","Thu Aug 08 05:41:11 UTC 2024","skipped","Thu Aug 08 05:41:11 UTC 2024","","test_upgrade","",""
